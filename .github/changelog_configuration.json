{
  "categories": [
    {
      "title": "## ⚡️ Added",
      "labels": [
        "feature",
        "enhancement",
        "database",
        "documentation"
      ]
    },
    {
      "title": "## 🐛 Fixed",
      "labels": [
        "bug",
        "bugfix"
      ]
    },
    {
      "title": "## 🔄 Refactoring",
      "labels": [
        "cleanup",
        "refactoring"
      ]
    },
    {
      "title": "## 🕰 Deprecated",
      "labels": [
        "deprecated"
      ]
    },
    {
      "title": "## 🗑 Removed",
      "labels": [
        "removed"
      ]
    },
    {
      "title": "## 🚀 Dependencies",
      "labels": [
        "dependencies"
      ]
    },
    {
      "title": "## 🚨 Security",
      "labels": [
        "security-issue"
      ]
    },
    {
      "title": "## 🛑 Breaking Changes",
      "labels": [
        "breaking-change"
      ]
    },
    {
      "title": "## 🧪 Tests",
      "labels": [
        "test"
      ]
    },
    {
      "title": "## Other",
      "labels": []
    }
  ],
  "ignore_labels": [
    "ignore"
  ],
  "sort": {
    "order": "ASC",
    "on_property": "mergedAt"
  },
  "template": "# 📦 Changelog\n\n#{{CHANGELOG}}\n\n#{{UNCATEGORIZED}}\n\n# Full Changelog\n[🔗 Release Diff](#{{RELEASE_DIFF}})\n\n# 👥Contributors\n\n # {{CONTRIBUTORS}}",
  "pr_template": "- #{{TITLE}} by @#{{AUTHOR}} in #{{URL}}",
  "empty_template": "No new PRs detected. For details on changes made directly in this version, see the [Changelog](CHANGELOG.md) or the [Release Diff](#{{RELEASE_DIFF}}).",
  "label_extractor": [
    {
      "pattern": "(.*)",
      "target": "$1",
      "flags": "gu"
    }
  ],
  "reference": {
    "pattern": ".*\\#(.*).*",
    "on_property": "body",
    "method": "replace",
    "target": "$1"
  },
  "transformers": [
    {
      "pattern": "[\\-\\*] (\\[(...|TEST|CI|SKIP)\\])( )?(.+?)\n(.+?[\\-\\*] )(.+)",
      "target": "- $4\n  - $6"
    }
  ],
  "trim_values": false,
  "max_tags_to_fetch": 200,
  "max_pull_requests": 300,
  "max_back_track_time_days": 365,
  "exclude_merge_branches": [
    "Owner/qa"
  ],
  "tag_resolver": {
    "method": "semver",
    "filter": {
      "pattern": "^v\\d+\\.\\d+\\.\\d+\\.\\d+-aasV3-alpha-(latest|stable|develop)$",
      "flags": "gu"
    }
  },
  "base_branches": [
    "main",
    "release",
    "integration/*"
  ]
}
